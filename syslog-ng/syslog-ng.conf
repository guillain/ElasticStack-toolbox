@version: 3.2
@include "scl.conf"

options {
          # Number of syslog lines stored in memory before being written to files

          # Your configuration file uses an obsoleted keyword
          # please update your configuration:
          #   keyword='sync', change='flush_lines'
          #sync (100);
          #flush_lines (100);
          #keyword='sync', change='flush_lines'
          #sync(1);
          #flush_lines (100);

          use_dns(yes);
          log_fifo_size(2048);
          time_reap(360);

          create_dirs (yes);
          group (syslog);
          dir_group (syslog);
          perm (0740);
          dir_perm (0750);
};

### Local storage ##################################################################
source s_local {
        system();
        internal();
};

destination d_local     { file("/var/log/messages"); } ;
destination debug       { file("/var/log/debug"); };
destination messages    { file("/var/log/messages"); };

destination mail        { file("/var/log/mail/mail.log"); };
destination maillog     { file("/var/log/mail/maillog"); };
destination mailinfo    { file("/var/log/mail/mail.info"); };
destination mailwarn    { file("/var/log/mail/mail.warn"); };
destination mailerr     { file("/var/log/mail/mail.err"); };

destination authlog     { file("/var/log/auth.log"); };
destination syslog      { file("/var/log/syslog"); };
destination cron        { file("/var/log/cron.log"); };
destination daemon      { file("/var/log/daemon.log"); };
destination kern        { file("/var/log/kern.log"); };
destination lpr         { file("/var/log/lpr.log"); };
destination user        { file("/var/log/user.log"); };
destination uucp        { file("/var/log/uucp.log"); };

destination console { usertty("root"); };

filter f_authpriv { facility(auth, authpriv); };
filter f_syslog { not facility(auth, authpriv) and not facility(mail); };
filter f_cron { facility(cron); };
filter f_daemon { facility(daemon); };
filter f_kern { facility(kern); };
filter f_lpr { facility(lpr); };
filter f_mail { facility(mail); };
filter f_user { facility(user); };
filter f_uucp { facility(cron); };

filter f_news { facility(news); };

filter f_debug { not facility(auth, authpriv, news, mail); };
filter f_messages { level(info .. warn)
        and not facility(auth, authpriv, cron, daemon, mail, news); };
filter f_emergency { level(emerg); };

filter f_info { level(info); };
filter f_notice { level(notice); };
filter f_warn { level(warn); };
filter f_crit { level(crit); };
filter f_err { level(err); };

filter f_cnews { level(notice, err, crit) and facility(news); };
filter f_cother { level(debug, info, notice, warn) or facility(daemon, mail); };

log { source(s_local); filter(f_authpriv);      destination(authlog); };
log { source(s_local); filter(f_authpriv);      destination(syslog); };
log { source(s_local); filter(f_syslog);        destination(syslog); };
log { source(s_local); filter(f_cron);          destination(cron); };
log { source(s_local); filter(f_daemon);        destination(daemon); };
log { source(s_local); filter(f_daemon);        destination(messages); };
log { source(s_local); filter(f_kern);          destination(kern); };
log { source(s_local); filter(f_kern);          destination(messages); };
log { source(s_local); filter(f_lpr);           destination(lpr); };
log { source(s_local); filter(f_mail);          destination(mail); };
log { source(s_local); filter(f_user);          destination(user); };
log { source(s_local); filter(f_user);          destination(messages); };
log { source(s_local); filter(f_uucp);          destination(uucp); };
log { source(s_local); filter(f_mail);          destination(maillog); };
log { source(s_local); filter(f_mail); filter(f_info); destination(mailinfo); };
log { source(s_local); filter(f_mail); filter(f_warn); destination(mailwarn); };
log { source(s_local); filter(f_mail); filter(f_err); destination(mailerr); };
log { source(s_local); filter(f_debug);         destination(debug); };
log { source(s_local); filter(f_messages);      destination(messages); };
log { source(s_local); filter(f_emergency); destination(console); };
log {  source(s_local);
       destination(d_local);
};

### Server log storage #############################################################
# Define all the sources of network generated syslog
# messages and label it "s_VLAN_server"
source s_VLAN_server {
          udp(ip(ADDRIP_SYSLOG-NG) port(514));
};

# Define the destination "d_VLAN_server" log directory
destination d_VLAN_server {
          file ("/home/data/servers/$YEAR.$MONTH.$DAY/$HOST/$FACILITY.log");
};

# Define the destination "d_VLAN_server_all" log directory
destination d_VLAN_server_all {
          file ("/var/log/network.log");
};

# Any logs that match the "VLAN_server" source should be logged
# in the "d_VLAN_server" directory
log { source(s_VLAN_server);
      destination(d_VLAN_server);
};
#log { source(s_VLAN_server);
#      filter(f_warn);
#      destination(d_mysql);
#};


# Push the logs in the DB
destination d_mysql {
        pipe("/var/log/mysql.pipe"
                template(
                        "INSERT IGNORE INTO syslog (date,time,host,facility,level,program,msg)
                        VALUES ('$YEAR-$MONTH-$DAY','$HOUR:$MIN:$SEC','$HOST','$FACILITY','$LEVEL','$PROGRAM','$MSG'); \n"
                )
                template-escape(yes));
};
filter f_mysql { level(crit, err, warn); };
rewrite r_mysql{
        ### MSG ###
        #subst("[A-Z][a-z][a-z] [0-9]*", "", value("MSG"), flags("global"));
        #subst("[0-9]*:[0-9]*:[0-9]*.[0-9]*", "", value("MSG"), flags("global"));
        #subst("[0-9]*-[0-9]*-[0-9]*", "", value("MSG"), flags("global"));
        #subst("[0-9]*/[0-9]*/[0-9]*", "", value("MSG"), flags("global"));

        subst("[A-Z][a-z][a-z] [0-9][0-9]", "", value("MSG"));
        subst("[0-9][0-9]:[0-9][0-9]:[0-9][0-9]\.[0-9][0-9][0-9]", "", value("MSG"));
        subst("[0-9][0-9]:[0-9][0-9]:[0-9][0-9]\.[0-9][0-9]", "", value("MSG"));
        subst("[0-9][0-9]:[0-9][0-9]:[0-9][0-9]\.[0-9]", "", value("MSG"));

        subst("[0-9][0-9]-[0-9][0-9]-[0-9][0-9]", "", value("MSG"));
        subst("[0-9][0-9]/[0-9][0-9]/[0-9][0-9]", "", value("MSG"));

        # '128: : : 12351: '
        subst("[0-9]*:", "", value("MSG"));
        subst("\t", "|", value("MSG"));

        ### PROGRAM ###
        subst("[0-9]*", "", value("PROGRAM"));
};
#log {
#       source(s_local);
#       source(s_VLAN_server);
        #filter(f_mysql);
        #rewrite(r_mysql);
        #destination(d_mysql);
#       flags(final);
#};
